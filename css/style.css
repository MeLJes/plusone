@charset "UTF-8";
/* Functions
 *
 * px-to-rem() | px-to-em()   — convert PX to EM or REM
 * color()                    — pick color from palette
 * weight()                   — set font-weight property
 * z()                        — set z-index property
 * breakpoint()               — set breakpoint name from the list below as an argument. Number value will converted to REM
 *
 */
/* Mixins
 *
 * font                  — Set font size & weight. Pass third parameter as 'gradient' to add CSS rules for gradient support
 * flex                  — Set element flex properties
 * touch                 — Set pointer-events and user-select CSS properties
 * position              — Set element z-index and position
 * padding               — Set element paddings
 * centering-flex        — Centering element with flex properties
 * centering-position    — Centering element with position and transform properties
 * tr                    — Transitions
 * width                 — Set element width and max-width
 * square                — Set equal width & height
 * square-max            — Set equal width, height, max-width & max-height
 * ratio-sn-land         — Set 16:9 ratio (Landscape)
 * ratio-sn-port         — Set 16:9 ratio (Portrait)
 * ratio-a4-land         — Set 99:70 ratio (A4, Landscape)
 * ratio-a4-port         — Set 99:70 ratio (A4, Portrait)
 * scrollbar             — Change scroll bar colors
 * placeholder           — Change input placeholder style
 * placeholder-remove    — Remove placeholder on click
 * input-autofill        — Change autofill color
 * clearfix              — Add clearfix for floating elements
 *
 */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: "Avenir-Regular";
  font-weight: normal;
  src: url("../fonts/AvenirNextCyr-Regular.eot");
  src: url("../fonts/AvenirNextCyr-Regular.woff") format("woff"), url("../fonts/AvenirNextCyr-Regular.otf") format("opentype"), url("../fonts/AvenirNextCyr-Regular.svg") format("svg"); }

@font-face {
  font-family: "Avenir-Demi";
  font-weight: 500;
  src: url("../fonts/AvenirNextCyr-Demi.eot");
  src: url("../fonts/AvenirNextCyr-Demi.woff") format("woff"), url("../fonts/AvenirNextCyr-Demi.otf") format("opentype"), url("../fonts/AvenirNextCyr-Demi.svg") format("svg"); }

html {
  font-family: "Avenir-Regular", serif;
  font-size: 100%;
  font-weight: normal; }

body {
  font-size: 1.125rem;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased; }

p, span {
  line-height: 1; }

@media screen and (min-width: 0rem) and (max-width: 47.9375rem) {
  body {
    font-size: 1rem; } }

html,
body {
  height: 100%; }

html {
  overflow-y: scroll; }
  html,
  html *:not(img) {
    box-sizing: border-box; }

body {
  color: var(--default);
  position: relative;
  display: flex;
  justify-content: flex-start;
  align-items: stretch;
  flex-direction: column;
  flex-wrap: nowrap; }

*:not(img) {
  outline: none;
  margin: 0;
  padding: 0; }
  *:not(img):before, *:not(img):after {
    box-sizing: inherit; }

section {
  position: relative; }

ul,
ol {
  list-style: none;
  padding: 0; }

svg {
  width: 100%;
  height: 100%; }

img,
object,
embed {
  height: auto;
  max-width: 100%; }

button {
  cursor: pointer; }

button,
fieldset,
input,
textarea {
  background: none;
  border: none;
  border-radius: 0;
  transition: all 0.2s ease-in-out; }

input,
textarea {
  -moz-appearance: textfield;
  -webkit-appearance: none; }

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield; }

form {
  position: relative; }

a,
a:hover,
a:active,
a:focus,
a:visited {
  color: inherit;
  text-decoration: none;
  transition: all 0.2s ease-in-out; }

.main-content {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  flex-wrap: nowrap;
  transition: all 0.2s ease-in-out;
  height: 100%; }

.container {
  width: 100%;
  max-width: 73.125rem;
  height: inherit;
  margin: 0 auto;
  padding: 0 1.875rem;
  position: relative; }

.update-pending {
  display: block;
  text-align: center;
  width: 100%; }

.button-holder {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%; }

.link-block {
  display: block;
  width: 100%;
  height: 100%;
  position: relative; }

.text-no-wrap {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

.video-player {
  padding-bottom: 56.25%;
  height: 0;
  position: relative; }
  .video-player iframe,
  .video-player img {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0; }

.dn, .video .video-holder .player-button,
.svg-sprite {
  display: none !important; }

.sf {
  flex: 1; }

.backspace {
  backface-visibility: hidden; }

@media screen and (min-width: 0rem) and (max-width: 47.9375rem) {
  .container {
    padding: 0 1.25rem; } }

.loader {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  flex-wrap: nowrap;
  z-index: 9999;
  position: fixed;
  top: 0rem;
  right: 0rem;
  bottom: 0rem;
  left: 0rem;
  user-select: none;
  pointer-events: none;
  transition: all 0.2s ease-in-out;
  background: var(--white);
  width: 100%;
  height: 100%;
  opacity: 1; }
  .loader .logo {
    width: 50vw;
    max-width: 18.75rem;
    margin-bottom: 4.6875rem; }
    .loader .logo img {
      height: auto;
      width: 100%;
      max-width: 18.75rem;
      margin: 0 auto; }
  .loader .spinner {
    width: 4.375rem;
    height: 4.375rem; }
    .loader .spinner img,
    .loader .spinner svg {
      width: 100%; }

body .main-content {
  user-select: none;
  pointer-events: none;
  opacity: 0; }

body.loading {
  overflow: hidden; }

body.loaded .loader {
  opacity: 0; }

body.loaded .main-content {
  user-select: auto;
  pointer-events: auto;
  opacity: 1; }

.header {
  padding: 1.5625rem 0;
  width: 100%;
  transition: all 0.2s ease-in-out; }
  .header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap; }
  .header .logo img {
    max-width: 8.125rem; }

@media screen and (min-width: 0rem) and (max-width: 47.9375rem) {
  .header {
    padding: 0.9375rem 0 0.625rem; }
    .header .logo img {
      max-width: 4.6875rem; } }

.footer {
  background: var(--extra);
  padding: 1.5625rem 0;
  width: 100%; }
  .footer .container {
    font-family: "Avenir-Demi";
    font-size: 0.875rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap; }
  .footer .place {
    line-height: 1.125rem; }
  .footer .social {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap; }
    .footer .social a {
      display: block;
      width: 1.75rem;
      height: 1.75rem; }
      .footer .social a:not(:first-child) {
        margin-left: 0.625rem; }
      .footer .social a:hover svg {
        transform: scale(1.1); }
      .footer .social a svg {
        transition: all 0.2s ease-in-out; }

@media screen and (min-width: 0rem) and (max-width: 47.9375rem) {
  .footer {
    padding: 1.875rem 0; }
    .footer .container {
      flex-direction: column;
      text-align: center; }
    .footer .place {
      padding-bottom: 3.4375rem;
      margin-bottom: 1.6875rem;
      position: relative; }
      .footer .place::after {
        content: '';
        display: block;
        background: var(--default);
        width: 2.75rem;
        height: 0.125rem;
        transform: translateX(-50%);
        position: absolute;
        top: 100%;
        left: 50%; } }

.intro,
.about,
.video {
  width: 100%; }

.intro {
  background: var(--secondary);
  padding: 3.4375rem 0; }
  .intro .grid {
    display: flex;
    justify-content: flex-start;
    align-items: stretch;
    flex-direction: row;
    flex-wrap: wrap; }
  .intro .item {
    border: 0.0625rem solid #DEDEDE;
    overflow: hidden;
    position: relative;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
    flex-wrap: nowrap;
    width: 29vw;
    max-width: 8.625rem;
    height: 29vw;
    max-height: 8.625rem; }
    .intro .item  .media {
      background: #C4C4C4;
      width: 100%;
      height: 100%; }
    .intro .item  .info {
      background: var(--primary);
      color: var(--white);
      padding: 0.625rem 0.75rem;
      width: 100%;
      z-index: 1;
      position: relative; }
      .intro .item  .info span {
        display: block;
        font-family: "Avenir-Demi";
        line-height: 0.875rem; }
        .intro .item  .info span:not(:last-child) {
          margin-bottom: 0.1875rem; }
      .intro .item  .info .name {
        font-size: 0.875rem; }
      .intro .item  .info .money {
        font-size: 0.5625rem; }
    .intro .item.item-duo {
      justify-content: center;
      align-items: flex-start;
      border: none;
      width: 60vw;
      max-width: 17.25rem; }
      .intro .item.item-duo img {
        width: 95%;
        max-width: 14.6875rem; }
    .intro .item.item-person {
      justify-content: flex-end; }
      .intro .item.item-person .media,
      .intro .item.item-person .media .img {
        transform: translate(-50%, -50%);
        z-index: 0;
        position: absolute;
        top: 50%;
        left: 50%; }
    .intro .item.item-company .media {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 0.9375rem; }
      .intro .item.item-company .media img {
        width: 100%; }
    .intro .item.item-button {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center; }
      .intro .item.item-button button {
        width: 100%;
        height: 100%; }
      .intro .item.item-button svg {
        fill: var(--primary);
        width: 1.5625rem;
        height: 1.5625rem; }

.about img,
.about .columns {
  margin-bottom: 4.375rem; }

.about p {
  font-family: "Avenir-Regular";
  font-size: 1.125rem;
  line-height: 1.5rem;
  text-align: center;
  max-width: 56.25rem;
  padding: 4.375rem 0;
  margin: 0 auto; }
  .about p span {
    font-family: "Avenir-Demi";
    color: var(--primary); }

.about img {
  transition: box-shadow 0.35s ease-in-out; }
  .about img:hover {
    box-shadow: 1px 1px 20px -6px #202848; }

.about .columns {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-direction: row;
  flex-wrap: nowrap; }

.about .column {
  width: 48%;
  max-width: 31.25rem; }
  .about .column p {
    text-align: left;
    padding: 0;
    margin: 0; }
    .about .column p:not(:last-child) {
      margin-bottom: 1.875rem; }

.video {
  margin-bottom: 4.375rem; }
  .video h2 {
    font-family: "Avenir-Demi";
    font-size: 3.125rem;
    line-height: 3.5625rem;
    text-align: center;
    margin-bottom: 5.3125rem; }
    .video h2 span {
      position: relative; }
      .video h2 span::after {
        content: '';
        display: block;
        background: var(--primary);
        width: 100%;
        height: 0.625rem;
        z-index: -1;
        position: absolute;
        right: 0;
        bottom: 0.5rem;
        left: 0; }
  .video .swiper-wrapper {
    /*width: 90%;
    max-width: px-to-rem(975);
    margin: 0 auto;*/ }
  .video .video-holder {
    margin: 0 auto;
    position: relative;
    width: 65vw;
    max-width: 975px;
    height: 36.5625vw;
    max-height: 548.4375px; }
    .video .video-holder .player-button {
      cursor: pointer;
      width: 100%;
      height: 100%;
      user-select: none;
      pointer-events: none; }
      .video .video-holder .player-button,
      .video .video-holder .player-button svg {
        transform: translate(-50%, -50%);
        z-index: 1;
        position: absolute;
        top: 50%;
        left: 50%; }
      .video .video-holder .player-button svg {
        width: 6.875rem;
        height: 6.875rem; }
    .video .video-holder iframe {
      width: 100%;
      height: 100%; }
  .video .swiper-button-next,
  .video .swiper-container-rtl .swiper-button-prev,
  .video .swiper-button-prev,
  .video .swiper-container-rtl .swiper-button-next {
    background: none;
    width: 0.875rem;
    height: 1.5rem;
    margin: 0;
    transform: translateY(-50%); }
    .video .swiper-button-next svg,
    .video .swiper-container-rtl .swiper-button-prev svg,
    .video .swiper-button-prev svg,
    .video .swiper-container-rtl .swiper-button-next svg {
      fill: var(--primary); }

@media screen and (min-width: 48rem) {
  .video .swiper-pagination {
    display: none; } }

@media screen and (min-width: 0rem) and (max-width: 47.9375rem) {
  .intro {
    padding: 0 0 1.25rem; }
    .intro .item .info {
      padding: 0.5rem; }
      .intro .item .info span {
        line-height: 1; }
        .intro .item .info span:not(:last-child) {
          margin-bottom: 0.1875rem; }
      .intro .item .info .name {
        font-size: 0.5625rem; }
      .intro .item .info .money {
        font-size: 0.4375rem; }
    .intro .item.item-duo {
      height: auto;
      max-height: auto;
      width: 100%;
      max-width: none;
      padding: 1.25rem 0; }
      .intro .item.item-duo img {
        width: 45%;
        max-width: 10.9375rem; }
  .about .container {
    padding: 0; }
  .about p {
    text-align: left;
    padding: 1.875rem 1.25rem 2.5rem; }
  .about img {
    margin-bottom: 1.875rem; }
  .about .columns {
    flex-direction: column;
    padding: 0 1.25rem;
    margin-bottom: 2.5rem; }
  .about .column {
    width: 100%;
    max-width: none; }
    .about .column:not(:last-child) {
      margin-bottom: 2.5rem; }
  .video {
    margin-bottom: 0; }
    .video .container {
      text-align: center;
      padding: 0; }
    .video h2 {
      display: inline-block;
      font-size: 1.375rem;
      margin-bottom: 2.5rem;
      position: relative; }
      .video h2 span {
        position: static; }
        .video h2 span::after {
          height: 0.5rem;
          bottom: 1rem; }
    .video .video-holder {
      width: 100vw;
      max-width: 975px;
      height: 56.25vw;
      max-height: 548.4375px; }
    .video .swiper-wrapper {
      width: 100%;
      padding-bottom: 4.375rem; }
    .video .swiper-button-next,
    .video .swiper-button-prev {
      display: none; }
    .video .swiper-container-horizontal > .swiper-pagination-bullets,
    .video .swiper-pagination-custom, .video .swiper-pagination-fraction {
      bottom: 1.5625rem; }
    .video .swiper-container-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet {
      width: 0.625rem;
      height: 0.625rem;
      margin: 0 0.375rem;
      opacity: 1; }
      .video .swiper-container-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet:not(.swiper-pagination-bullet-active) {
        background: transparent;
        border: 0.0625rem solid var(--primary); }
    .video .swiper-pagination-bullet-active {
      background: var(--primary); } }

@media screen and (min-width: 28.125rem) and (max-width: 47.9375rem) {
  .intro .item {
    width: 30vw;
    height: 30vw; } }

@media screen and (min-width: 48rem) and (max-width: 74.9375rem) {
  .video h2 {
    font-size: 2.5rem;
    margin-bottom: 2.5rem; }
  .video .video-holder {
    width: 83vw;
    max-width: 800px;
    height: 46.6875vw;
    max-height: 450.0px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
